{"is_source_file": true, "format": "Python", "description": "This file defines dependencies for token parsing and user resolution in a FastAPI app, including token extraction from Authorization headers and in-memory user lookup or creation.", "external_files": ["src.api.models", "src.api.store"], "external_methods": ["fastapi.Depends", "fastapi.Header", "fastapi.HTTPException", "fastapi.status", "pydantic.BaseModel", "pydantic.Field"], "published": ["get_token_data", "get_current_user"], "classes": [{"name": "TokenData", "description": "Pydantic model representing the token payload with subject and token string."}], "methods": [{"name": "Optional[str] _parse_bearer_token(authorization: Optional[str])", "description": "Parses the Authorization header to extract the bearer token if properly formatted.", "scope": "", "scopeKind": ""}, {"name": "TokenData get_token_data(authorization: Optional[str] = Header(default=None))", "description": "FastAPI dependency that extracts and validates the bearer token from the Authorization header, returning a TokenData object.", "scope": "", "scopeKind": ""}, {"name": "User get_current_user(token_data: TokenData = Depends(get_token_data))", "description": "FastAPI dependency that retrieves or creates a user based on token subject data.", "scope": "", "scopeKind": ""}], "calls": ["fastapi.Header", "fastapi.HTTPException", "fastapi.status.HTTP_401_UNAUTHORIZED", "Depends(get_token_data)"], "search-terms": ["FastAPI dependencies", "token parsing", "get_token_data", "get_current_user", "Authorization header", "User in-memory store", "TokenData model", "deps.py"], "state": 2, "file_id": 13, "knowledge_revision": 41, "git_revision": "", "ctags": [{"_type": "tag", "name": "TokenData", "path": "/home/kavia/workspace/code-generation/quoteextractor-platform-29-39/backend/src/api/deps.py", "pattern": "/^class TokenData(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_parse_bearer_token", "path": "/home/kavia/workspace/code-generation/quoteextractor-platform-29-39/backend/src/api/deps.py", "pattern": "/^def _parse_bearer_token(authorization: Optional[str]) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(authorization: Optional[str])"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/quoteextractor-platform-29-39/backend/src/api/deps.py", "pattern": "/^async def get_current_user(token_data: TokenData = Depends(get_token_data)) -> User:$/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(token_data: TokenData = Depends(get_token_data))"}, {"_type": "tag", "name": "get_token_data", "path": "/home/kavia/workspace/code-generation/quoteextractor-platform-29-39/backend/src/api/deps.py", "pattern": "/^async def get_token_data(authorization: Optional[str] = Header(default=None)) -> TokenData:$/", "language": "Python", "typeref": "typename:TokenData", "kind": "function", "signature": "(authorization: Optional[str] = Header(default=None))"}, {"_type": "tag", "name": "sub", "path": "/home/kavia/workspace/code-generation/quoteextractor-platform-29-39/backend/src/api/deps.py", "pattern": "/^    sub: str = Field(..., description=\"Subject (user id\\/email)\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenData", "scopeKind": "class"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/quoteextractor-platform-29-39/backend/src/api/deps.py", "pattern": "/^    token: str = Field(..., description=\"Opaque token string\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenData", "scopeKind": "class"}], "hash": "4a4aee55e2be421150450de31eda313b", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/deps.py", "fields": [{"name": "str sub", "scope": "TokenData", "scopeKind": "class", "description": "unavailable"}, {"name": "str token", "scope": "TokenData", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"41": ""}]}